= rserve-simpler

rserve-simpler is a simple interface on top of
{rserve-client}[https://github.com/clbustos/Rserve-Ruby-client], a fantastic
gem that lets a user communicate with R in a straighforward, efficient way.

{rserve-client}[https://github.com/clbustos/Rserve-Ruby-client] is doing all
the heavy lifting and should be consulted for background.

== Synposis

These examples use Ruby 1.9 hash syntax, but this should work on 1.8 if the
hashes are keyed old-style ( => ).

    require 'rserve/simpler'
    r = Rserve::Simpler.new

=== #converse

    # converse with R (like eval but applies .to_ruby to result)
    r.converse "mean(c(1,2,3))"  # -> 2.0

    # converse lets you name variables in a hash (1.9 hash syntax)
    r.converse(a: [1,2,3], b: [4,5,6]) { "cor(a,b)" } # -> 1.0
    # another form doing the same thing
    r.converse("cor(a,b)", a: [1,2,3], b: [4,5,6])

==== prompt-like syntax >>

    r >> "mean(c(1,2,3))"  # -> 2.0
    # note: use '.' to get proper behavior with multiple args or blocks
    r.>> "cor(a,b)", a: [1,2,3], b: [1,2,3]

=== #command

    # use the same syntax but without caring about the reply
    r.command(a: [1,2,3], b: [4,5,6]) { "z <- cor(a,b)" }  # -> true
    r.converse "z"  # -> 1.0

=== simple DataFrame

==== with a hash

Column names are derived from hash keys (#keys).  Ruby 1.9 hashes keep track
of insertion order.  Use an OrderedHash (gem install orderedhash) for ruby
1.8, or set colnames.
     
    hash = {
      var1: [1,2,3,4], 
      fac2: [3,4,5,6], 
      res1: [4,5,6,7]
    }
    # convert with hash.to_dataframe or Rserve::DataFrame.new(hash)
    r.command( df: hash.to_dataframe ) do 
      %Q{ 
        pdf("out.pdf")
        plot(df)
        dev.off()
      }
    end

==== with an array of Structs

    DataRow = Struct.new(:var1, :fac1, :res1)
    structs = [
      DataRow.new(1,3,4),
      DataRow.new(2,4,5),
      DataRow.new(3,5,6),
      DataRow.new(4,6,7)
    ]
    dataframe = Rserve::DataFrame.from_structs(structs)
    reply = r.converse("summary(df)", df: dataframe)

== Copyright

see LICENSE.txt

